randomKeywordAction: "#youPronouns##randomKeywordActionWithPronoun#"
randomKeywordCardAction: "#youPronouns##randomKeywordCardActionWithPronoun#"

# expects #pronoun# to be selected
randomKeywordActionWithPronoun:
- "#cardRandomAction_Cast#"
- "#cardRandomAction_Counter#"
- "#cardRandomAction_Create#"
- "#cardRandomAction_Destroy#"
- "#cardRandomAction_Discard#"
- "#cardRandomAction_Exile#"
- "#cardRandomAction_Play#"
- "#cardRandomAction_Regenerate#"
- "#cardRandomAction_Reveal#"
- "#cardRandomAction_Sacrifice#"
- "#cardRandomAction_Search#"
- "#cardRandomAction_Shuffle#"
- "#cardRandomAction_Tap#"
- "#cardRandomAction_Untap#"
- "#cardRandomAction_Fateseal#"
- "#cardRandomAction_Clash#"
- "#cardRandomAction_Planeswalk#"
- "#cardRandomAction_SetInMotion#"
- "#cardRandomAction_Transform#"
- "#cardRandomAction_Detain#"
- "#cardRandomAction_Manifest#"
- "#cardRandomAction_Exert#"
- "#cardRandomAction_Proliferate#"
- "#cardRandomAction_Populate#"
- "#cardRandomAction_Vote#"
- "#cardRandomAction_Investigate#"
- "#cardRandomAction_Explore#"

# expects #pronoun# to be selected
randomKeywordCardActionWithPronoun:
- "#cardRandomAction_Cast#"
- "#cardRandomAction_Counter#"
- "#cardRandomAction_Create#"
- "#cardRandomAction_Destroy#"
- "#cardRandomAction_Discard#"
- "#cardRandomAction_Exile#"
- "#cardRandomAction_Play#"
- "#cardRandomAction_Regenerate#"
- "#cardRandomAction_Reveal#"
- "#cardRandomAction_Sacrifice#"
- "#cardRandomAction_Search#"
- "#cardRandomAction_Shuffle#"
- "#cardRandomAction_Tap#"
- "#cardRandomAction_Untap#"
- "#cardRandomAction_SetInMotion#"
- "#cardRandomAction_Transform#"
- "#cardRandomAction_Detain#"
- "#cardRandomAction_Manifest#"
- "#cardRandomAction_Exert#"

cardRandomAction_Cast: "cast#s# #_cardActionVerbTheirSpells#"
cardRandomAction_Counter: "counter#s# #_cardActionVerbAllSpells#"
cardRandomAction_Create: ["#cardRandomAction_Create_One#", "#cardRandomAction_Create_Many#"]
cardRandomAction_Destroy: "destroy#s# #_cardActionVerbPermanent#"
cardRandomAction_Discard: "discard#s# #_cardActionVerbCardsInHand#[_from:, from #their# hand, in #their# hand]"
cardRandomAction_Exile: "exile#s# #_cardActionVerbPermanent#"
cardRandomAction_Play: "play#s# #_cardActionVerbTheirSpells#"
cardRandomAction_Regenerate: "regenerate#s# #_cardActionVerbPermanent#"
cardRandomAction_Reveal: "reveal#s# #_cardActionVerbCardsInHand#[_fromWhere:from #their# hand,from #their# library,from #their# sideboard,from #their# trade binder] #_fromWhere#"
cardRandomAction_Sacrifice: "sacrifice#s# #_cardActionVerbPermanent#"
cardRandomAction_Search: "search#es# [_zone:#_whose# library,#_whose# library,#_whose# graveyard,#_whose# graveyard#comma# hand#comma# and library]#_zone# for #_cardActionVerbAnyCard#"
cardRandomAction_Shuffle: "shuffle#s# #_cardActionVerbPermanent# into #_whose# library"
cardRandomAction_Tap: "tap#s# #_cardActionVerbPermanent#"
cardRandomAction_Untap: "untap#s# #_cardActionVerbPermanent#"
cardRandomAction_Fateseal: "fateseal#s#[_who:#themselves#,#their# opponent] #_who#"
cardRandomAction_Clash: "clash#es# with[_who:#their# opponent,#their# opponent,#themselves#] #_who#"
cardRandomAction_Planeswalk: "planeswalk#s# to #planechasePlane#"
cardRandomAction_SetInMotion: "set#s# #cardRandomAction_SetInMotion_Scheme# in motion"
cardRandomAction_Proliferate: "proliferate#s# #_countTimes#"
cardRandomAction_Transform: ["#cardRandomAction_Tranform_One#", "#cardRandomAction_Tranform_Many#"]
cardRandomAction_Detain: "detain#s# #_cardActionVerbPermanent#"
cardRandomAction_Populate: "populate#s# #_countTimes#"
cardRandomAction_Vote: "vote#s# for “#willOfTheCouncilVoteChoice.capitalizeAll#”[_or:, or “#willOfTheCouncilVoteChoice.capitalizeAll#”]#_or#"
cardRandomAction_Manifest:  ["#cardRandomAction_Manifest_One#", "#cardRandomAction_Tranform_Many#"]
cardRandomAction_Investigate: "investigate#s# #_countTimes#"
cardRandomAction_Exert: "exert#s# #_cardActionVerbPermanent#"
cardRandomAction_Explore: "explore#s# #_countTimes#"

cardRandomAction_SetInMotion_Scheme:
- "#archenemyScheme##_them_it#"
- "#count# schemes#_them_them#"

_them_it: "[_them:it]"
_them_them: "[_them:them]"

cardRandomAction_Create_One:  "create#s# [_aOne:#creatureTypes.capitalize.a#,#creatureTypes.capitalize.a#,exactly one #creatureTypes.capitalize#]#_aOne# token#_them_it#"
cardRandomAction_Create_Many: "create#s# #count# #creatureTypes.capitalize# tokens#_them_them#"

cardRandomAction_Manifest_One: "#_them_it#manifest#s# [_card:card,#cardClassificationBase#][_what:the top card of #their# library,#_card.a# from #their# hand#_them_it#,#_card.a# from #their# sideboard]#_what#"
cardRandomAction_Manifest_Many: "#_them_them#manifest#s# [_card:card,#cardClassificationBase#][_what:the top #count# cards of #their# library#_them_them#,#cardCopyCount# #_card.sIfNeeded# from #their# hand#_them_them#]#_what##_them_them#"

cardRandomAction_Tranform_One: "#_them_it#transform#s# #_cardActionVerbPermanentSingle# into #cardRandomAction_Tranform_Target_Single#"
cardRandomAction_Tranform_Many: "#_them_them#transform#s# #_cardActionVerbPermanentMulti# into #cardRandomAction_Tranform_Target_Multi#"

cardRandomAction_Tranform_Target_Single:
- "#randomAnyCard##_them_it#"
- "a random #cardClassificationBase##_them_it#"
- "a random #cardTypes##_them_it#"

cardRandomAction_Tranform_Target_Multi:
- "random #cardClassificationBase.sIfNeeded##_them_them#"
- "random #cardTypes.sIfNeeded##_them_them#"

# otherCounts
c_one: "[_one:any,exactly one]#_one##_them_it#"

c_everyEach:
- "every#_them_them#"
- "each#_them_it#"

c_all: "all"
c_allOfTheir: "[_allEach:all,each]#_allEach# of #their#"
c_some: "[_howmany:a bunch of,a couple of,a few,any number of,several]#_howmany#"
c_someOf: "[_howmany:a bunch of,a couple of,a few of,any number of,several of]#_howmany#"

_countSingular:
- "#c_one#"
- "#c_everyEach#"

_countMultiple:
- "#c_all#"
- "#c_some#"
- "#count#"
- "#count#"

_countTimes:
- "once"
- "exactly once"
- "twice"
- "#count# times"
- "#count# times"

_objCount: "#_count# #_object#"

_whose: ["#their#","#their#","#their# opponent'#s#"]
_whoseOwnSingle: 
- "#their# own#_them_it#"
- "#their# opponent#possessive##_them_it#"
- "#their# opponent#possessive##_them_it#"
_whoseOwnMulti: 
- "#their# own#_them_them#"
- "#their# opponent#possessive##_them_them#"
- "#their# opponent#possessive##_them_them#"

_controlled: ["", " #they# control#s#", " #their# opponent controls"]

randomNonland: "[#randomAnyCard#]#_cardFamiliarName1#"

_cardActionVerbSingleOptions:
- "#_objCount##_them_it#"
- "#_object.a##_controlled##_them_it#"
- "#randomAnyCard##_them_it#"

_cardActionVerbPermanent: ["#_cardActionVerbPermanentSingle#","#_cardActionVerbPermanentMulti#"]
_cardActionVerbPermanentSingle: "#_them_it#[_count:#_countSingular#][_object:permanent,#cardClassificationBase#,#cardClassificationBase#,#cardCategory#,#randomAnyCard#,#cardTypes#]#_cardActionVerbSingleOptions#"
_cardActionVerbPermanentMulti: "#_them_them#[_own:, own][_count:#_countMultiple#,#c_allOfTheir# opponent#possessive#,#c_allOfTheir##_own#][_object:permanents,#cardClassificationBase.sIfNeeded#,#cardClassificationBase.sIfNeeded#,#cardCategory.sIfNeeded#,#cardTypes.sIfNeeded#][_result:#_objCount#,#_countMultiple# #_object##_controlled#]#_result#"

_cardActionVerbCardsInHand: ["#_cardActionVerbCardsInHandSingle#","#_cardActionVerbCardsInHandMulti#"]
_cardActionVerbCardsInHandSingle: "#_them_it#[_count:#_countSingular#][_object:#cardCategory#,#cardClassificationBase#,#randomNonland#,#cardTypes#]#_objCount#"
_cardActionVerbCardsInHandMulti: "#_them_them#[_count:#_countMultiple#][_object:#cardCategory.sIfNeeded#,#cardClassificationBase.sIfNeeded#,#randomNonland.sIfNeeded#,#cardTypes.sIfNeeded#]#_objCount#"

_cardActionVerbTheirSpells: ["#_cardActionVerbTheirSpellsSingle#","#_cardActionVerbTheirSpellsMulti#"]
_cardActionVerbTheirSpellsSingle: "#_them_it#[_count:#_countSingular#][_object:spell,#cardClassificationBase#,copy of #randomNonland#]#_objCount#"
_cardActionVerbTheirSpellsMulti: "#_them_them#[_count:#_countMultiple#][_object:spells,#cardClassificationBase.sIfNeeded#,copies of #randomNonland#]#_objCount#"

_cardActionVerbAllSpells:  ["#_cardActionVerbAllSpellsSingle#","#_cardActionVerbAllSpellsMulti#"]
_cardActionVerbAllSpellsSingle: "#_them_it#[_count:#_countSingular#][_object:spell,#cardClassificationBase#,#randomNonland#][_result:#_objCount#,one of #_whoseOwnSingle# #_object.sIfNeeded#,#their# own #_object#,one of #_whoseOwnSingle# #_object.sIfNeeded#]#_result#"
_cardActionVerbAllSpellsMulti: "#_them_them#[_count:#_countMultiple#][_object:spells,#cardClassificationBase.sIfNeeded#,#randomNonland.sIfNeeded#][_result:#_objCount#,#c_someOf# #_whoseOwnMulti# #_object#,#_whoseOwnMulti# #_object#]#_result#"

_cardActionVerbAnyCard: ["#_cardActionVerbAnyCardSingle#","#_cardActionVerbAnyCardMulti#"]
_cardActionVerbAnyCardSingle: "#_them_it#[_count:#c_one#][_object:card,#cardClassificationBase#,#cardTypes#,#cardCategory#][_result:#_objCount#,#_objCount#,a copy of #randomRealCard#]#_result#"
_cardActionVerbAnyCardMulti: "#_them_them#[_count:#c_all#][_object:#cardClassificationBase.sIfNeeded#,copies of #randomRealCard#,#cardTypes.sIfNeeded#,#cardCategory.sIfNeeded#]#_objCount#"